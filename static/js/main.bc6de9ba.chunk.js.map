{"version":3,"sources":["logo.svg","views/markers/index.js","views/markers/marker.js","views/datatable/index.js","views/datatable/datatable.js","views/chart/index.js","views/chart/chart.js","reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","props","dispatch","useDispatch","useState","locations","setLocations","decades","setDecades","selDecade","setSelDecade","onDecadeChange","val","type","payload","filteredResults","filter","loc","Year","length","map","latitude","longitude","window","google","mapOptions","center","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","document","getElementById","loadGoogleMaps","Lat","Long","forEach","res","position","title","setMap","useEffect","fetch","then","response","text","data","delimiter","titles","slice","indexOf","trim","split","v","values","replace","args","reduce","obj","index","csvToJson","decadesList","Set","sort","val1","val2","className","value","onChange","event","currentTarget","decade","id","DataTable","useSelector","state","selectedDecade","tabData","setTabData","Chart","selLatLong","setSelLatLong","asset","setAsset","renderGraph","selVal","parseTime","d3","canBeSelected","lat","long","year","parseFloat","parseInt","d","margin","width","height","remove","svg","append","attr","x","range","y","domain","call","valueLine","getLatLongList","getAssetList","initialState","mainReducer","action","store","createStore","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc6de9ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Marker from \"./marker\";\r\nexport default Marker;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './marker.scss';\r\n\r\nexport default function Marker (props) {\r\n    const dispatch = useDispatch();\r\n    const [locations, setLocations] = useState([]);\r\n    const [decades, setDecades] = useState([]);\r\n    const [selDecade, setSelDecade] = useState('');\r\n    const csvToJson = (data, delimiter = ',') => {\r\n        const titles = data.slice(0, data.indexOf('\\n')).trim().split(delimiter);\r\n        return data\r\n            .slice(data.indexOf('\\n') + 1)\r\n            .split('\\n')\r\n            .map(v => {\r\n                let values = [];\r\n                v.trim().replace(/^(\".*\"|.*),(.*),(.*),(.*),(.*),(\"\\{.*\\}\"),(.*)/g, (...args) => {\r\n                    values = args.slice(1);\r\n                });\r\n                return titles.reduce(\r\n                    (obj, title, index) => ((obj[title] = values[index]), obj),\r\n                    {}\r\n                );\r\n        });\r\n    };\r\n\r\n    const loadGoogleMaps = (latitude, longitude) => {\r\n        if ( window.google ) {\r\n            var mapOptions = {\r\n                // eslint-disable-next-line\r\n                center:new google.maps.LatLng(latitude, longitude), \r\n                zoom:9,\r\n                // eslint-disable-next-line\r\n                mapTypeId:google.maps.MapTypeId.ROADMAP\r\n            };\r\n            // eslint-disable-next-line\r\n            return new google.maps.Map(document.getElementById(\"gm-container\"),mapOptions);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const onDecadeChange = (val) => {\r\n        setSelDecade(val);\r\n        dispatch({\r\n            type: 'SET_SELECTED_DECADE',\r\n            payload: val\r\n        })\r\n        let filteredResults = locations.filter(loc => loc.Year === val);\r\n        if ( filteredResults.length > 0 ) {\r\n            let map = loadGoogleMaps(filteredResults[0].Lat, filteredResults[0].Long);\r\n            if ( map ) {\r\n                filteredResults.forEach(res => {\r\n                    // eslint-disable-next-line\r\n                    let marker = new google.maps.Marker({\r\n                        // eslint-disable-next-line\r\n                        position: new google.maps.LatLng(res.Lat,res.Long),\r\n                        title: res['Asset Name']+\"-\"+res[\"Business Category\"]\r\n                    });\r\n                    marker.setMap(map);\r\n                });\r\n            }\r\n        }                \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('sample_data.csv').then(response => response.text()).then(data => {\r\n            data = csvToJson(data);\r\n            setLocations(data);\r\n            dispatch({\r\n                type: 'SAVE_LOCATIONS',\r\n                payload: data\r\n            });\r\n            let decadesList = [...(new Set((data.map(val => val.Year))))];\r\n            decadesList = decadesList.sort((val1, val2) => { return val1 - val2; });\r\n            setDecades(decadesList);\r\n        });                \r\n    }, []);\r\n    useEffect(() => {\r\n        if ( decades.length > 0 && !selDecade ) {\r\n            onDecadeChange(decades[0]);\r\n        }\r\n    }, [decades]);\r\n    return (<div className='marker-selection'>\r\n        <p className='decade-selection'>Decade selection: <select value={selDecade} onChange={(event) => onDecadeChange(event.currentTarget.value)}>\r\n            <option value=''>All</option>\r\n            { decades?.map(decade => {\r\n                return <option value={decade}>{decade}</option>\r\n            })}\r\n        </select></p>        \r\n        <div id=\"gm-container\" className='map-container'>\r\n            <p>Loading google maps</p>\r\n        </div>\r\n    </div>)\r\n}","import DataTable from './datatable';\r\nexport default DataTable;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './datatable.scss';\r\nexport default function DataTable(props) {\r\n    const { locations, selectedDecade } = useSelector((state) => state);\r\n    const [ tabData, setTabData] = useState([]);\r\n    useEffect(() => {\r\n        setTabData(locations.filter(val => val.Year === selectedDecade));\r\n    }, [locations, selectedDecade]);\r\n    const headers = ['Asset Name','Business Category','Risk Rating','Risk Factors','Year'];\r\n    return <div className='viz-table'>\r\n        <table>\r\n            <tr>\r\n                { headers.map(val => <th>{val}</th>) }\r\n            </tr>\r\n            {\r\n                tabData && tabData.map(val => {\r\n                    return <tr>\r\n                        <td>{val['Asset Name']}</td>\r\n                        <td>{val['Business Category']}</td>\r\n                        <td>{val['Risk Rating']}</td>\r\n                        <td><p className='risk-factor-col' title={val['Risk Factors']}>{val['Risk Factors']}</p></td>\r\n                        <td>{val['Year']}</td>\r\n                    </tr>\r\n                }) \r\n            }\r\n        </table>\r\n    </div>\r\n}\r\n","import Chart from \"./chart\";\r\nexport default Chart;","import React, { useEffect, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './chart.scss';\r\nimport * as d3 from 'd3';\r\n\r\nexport default function Chart(props) {\r\n    const { locations } = useSelector((state) => state);\r\n    const [ selLatLong, setSelLatLong ] = useState('');\r\n    const [ asset, setAsset ] = useState('');\r\n    useEffect(() => {\r\n        if ( locations && locations.length > 0 ) {\r\n            setSelLatLong(locations[0].Lat+\",\"+locations[0].Long);\r\n            renderGraph(locations[0].Lat+\",\"+locations[0].Long, 'LatLong'); \r\n        }        \r\n    }, [locations]);\r\n\r\n    const getLatLongList = () => {\r\n        let data = [];\r\n        if (locations) {\r\n            data = locations.map(val => ({ Lat: val.Lat, Long: val.Long }));\r\n        }\r\n        return data;\r\n    };\r\n\r\n    const getAssetList = () => {\r\n        let data = [];\r\n        if (locations) {\r\n            data = locations.map(val => val['Asset Name']);\r\n        }\r\n        return data;\r\n    };\r\n    const renderGraph = (selVal, type) => {\r\n        let parseTime = d3.timeParse(\"%Y\");\r\n        let data = [];\r\n        if ( locations ) {\r\n            data = locations.filter(val => {\r\n                let canBeSelected = false;\r\n                if ( type === 'Asset' ) {\r\n                    canBeSelected = val['Asset Name'] === selVal;\r\n                }\r\n                if ( type === 'LatLong' ) {\r\n                    canBeSelected = (val['Lat'] === selVal.split(\",\")[0] || val['Long'] === selVal.split(\",\")[1]);\r\n                }\r\n                return canBeSelected;\r\n            });\r\n            data = data.map( val => ({ asset: val['Asset Name'], lat: val['Lat'], long: val['Long'], year: val.Year, value: val['Risk Rating']}))\r\n            data = data.sort((val1, val2) => {\r\n                if ( val1.year === val2.year ) {\r\n                    return parseFloat(val1.value) - parseFloat(val2.value);\r\n                }\r\n                return parseInt(val1.year) - parseInt(val2.year);\r\n            });\r\n        }\r\n        data.forEach((d) => {\r\n            d.year = parseTime(d.year);\r\n            d.value = +d.value\r\n        });\r\n        let margin = { top: 20, right: 20, bottom: 50, left: 70 },\r\n            width = 400 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n        d3.selectAll(\".viz-chart-container svg\").remove();\r\n        let svg = d3.select(\".viz-chart-container\").append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left},     ${margin.top})`);\r\n        // Add X axis and Y axis\r\n        let x = d3.scaleTime().range([0, width]);\r\n        let y = d3.scaleLinear().range([height, 0]);\r\n        x.domain(d3.extent(data, (d) => { return d.year; }));\r\n        y.domain([0, d3.max(data, (d) => { return d.value; })]);\r\n        svg.append(\"g\")\r\n        .attr(\"transform\", `translate(0, ${height})`)\r\n        .call(d3.axisBottom(x));\r\n        svg.append(\"g\")\r\n        .call(d3.axisLeft(y));\r\n        // add the Line\r\n        let valueLine = d3.line()\r\n            .x((d) => { return x(d.year); })\r\n            .y((d) => { return y(d.value); });\r\n        svg.append(\"path\")\r\n            .data([data])\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"steelblue\")\r\n            .attr(\"stroke-width\", 1.5)\r\n            .attr(\"d\", valueLine)\r\n    };\r\n    return <div className='viz-chart'>\r\n        <div className='viz-chart-controls'>\r\n            <p> Latitude and Longitude: </p>\r\n                <select value={selLatLong} onChange={(event) => {setSelLatLong(event.currentTarget.value); renderGraph(event.currentTarget.value,'LatLong'); setAsset(''); }}>\r\n                    <option value=''>Please select</option>\r\n                    {\r\n                        getLatLongList().map(val => <option value={val.Lat+\",\"+val.Long}>{val.Lat+\",\"+val.Long}</option>)\r\n                    }\r\n                </select>\r\n            \r\n            <p>\r\n                Asset: </p>\r\n                <select value={asset} onChange={(event) => {setSelLatLong(''); renderGraph(event.currentTarget.value,'Asset'); setAsset(event.currentTarget.value); }}>\r\n                    <option value=''>Please select</option>\r\n                    {\r\n                        getAssetList().map(val => <option value={val}>{val}</option>)\r\n                    }\r\n                </select>\r\n        </div>\r\n        <div className='viz-chart-container'>\r\n\r\n        </div>\r\n    </div>\r\n}","const initialState = {\r\n    locations: [],\r\n    selectedDecade: ''\r\n}\r\nconst mainReducer = (state=initialState, action) => {\r\n    switch( action.type) {\r\n        case 'SAVE_LOCATIONS':\r\n            return { ...state, locations: action.payload };\r\n        case 'SET_SELECTED_DECADE':\r\n            return { ...state, selectedDecade: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default mainReducer;","import { createStore } from 'redux';\r\nimport mainReducer from './reducer';\r\n\r\nconst store = createStore(mainReducer);\r\nexport default store;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Marker from './views/markers';\nimport DataTable from './views/datatable';\nimport Chart from './views/chart';\nimport {Provider} from 'react-redux';\nimport store from './store';\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='app'>\n        <h1 className='header-title'>Risk Viz</h1>\n        <main>\n          <div className='cmp-sec'>\n            <Marker></Marker>\n          </div>\n          <div className='cmp-sec'>\n            <DataTable></DataTable>\n          </div>\n          <div className='cmp-sec'>\n            <Chart></Chart>\n          </div>\n        </main>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}